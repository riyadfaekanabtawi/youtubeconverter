<div class="form-container">
  <h1>Convert Multiple Youtube URLs to MP3</h1>
  <p class="note">You can add up to 20 links at a time. Duplicate links are not allowed.</p>

  <form id="youtube-form" action="<%= convert_path %>" method="post">
    <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
    <div class="form-group">
      <label for="youtube-input">YouTube URLs</label>
      <input type="text" id="youtube-input" placeholder="Enter a valid YouTube URL and press Enter">
    </div>

    <!-- Container for displaying bubbles -->
    <div id="bubbles-container" class="bubbles-container"></div>

    <!-- Hidden inputs will be appended here -->
    <div id="hidden-inputs"></div>

    <div class="form-group">
      <button type="submit" id="submit-btn">Download MP3</button>
    </div>

    <!-- Loader -->
    <div id="loader" class="loader-overlay" style="display: none;">
      <div class="loader"></div>
      <p>Processing your videos...</p>
    </div>
  </form>
</div>

<style>
  .bubble {
    display: inline-block;
    background: #007bff;
    color: white;
    padding: 5px 10px;
    border-radius: 15px;
    margin: 5px;
  }

  .bubble button {
    background: none;
    border: none;
    color: white;
    cursor: pointer;
    margin-left: 5px;
  }

  .loader-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    color: white;
    font-size: 18px;
  }

  .loader {
    border: 4px solid #f3f3f3;
    border-top: 4px solid #3498db;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const youtubeInput = document.getElementById('youtube-input');
  const bubblesContainer = document.getElementById('bubbles-container');
  const hiddenInputsContainer = document.getElementById('hidden-inputs');
  const form = document.getElementById('youtube-form');
  const loader = document.getElementById('loader');
  const submitBtn = document.getElementById('submit-btn');
  const maxLinks = 20;

  function sanitizeYouTubeURL(url) {
    try {
      let urlObj = new URL(url);
      return urlObj.origin + urlObj.pathname; // Removes query parameters like list & start_radio
    } catch (error) {
      return null; // Invalid URL
    }
  }

  function addBubble(url) {
    const bubble = document.createElement('span');
    bubble.className = 'bubble';
    bubble.textContent = url;

    const removeBtn = document.createElement('button');
    removeBtn.type = 'button';
    removeBtn.textContent = 'x';
    removeBtn.addEventListener('click', function() {
      bubblesContainer.removeChild(bubble);
      const hiddenInput = hiddenInputsContainer.querySelector(`input[value="${url}"]`);
      if (hiddenInput) {
        hiddenInputsContainer.removeChild(hiddenInput);
      }
    });
    bubble.appendChild(removeBtn);
    bubblesContainer.appendChild(bubble);

    const hiddenInput = document.createElement('input');
    hiddenInput.type = 'hidden';
    hiddenInput.name = 'youtube_urls[]';
    hiddenInput.value = url;
    hiddenInputsContainer.appendChild(hiddenInput);
  }

  youtubeInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      let url = sanitizeYouTubeURL(youtubeInput.value.trim());
      if (!url) {
        alert('Invalid YouTube URL');
        return;
      }

      if (bubblesContainer.children.length >= maxLinks) {
        alert(`You can only add up to ${maxLinks} links.`);
        return;
      }

      const existingValues = Array.from(hiddenInputsContainer.querySelectorAll('input[name="youtube_urls[]"]'))
        .map(input => input.value.trim());

      if (existingValues.includes(url)) {
        alert('This URL is already added.');
        return;
      }

      addBubble(url);
      youtubeInput.value = '';
    }
  });

  form.addEventListener('submit', function(e) {
    e.preventDefault();

    if (hiddenInputsContainer.children.length === 0) {
      alert('Please add at least one YouTube URL.');
      return;
    }

    loader.style.display = 'flex';
    submitBtn.disabled = true;

    const formData = new FormData(form);

    fetch(form.action, {
      method: 'POST',
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: formData
    })
    .then(response => {
      if (!response.ok) {
        return response.json().then(err => { throw new Error(err.error || 'Conversion failed'); });
      }
      const disposition = response.headers.get('Content-Disposition');
      return response.blob().then(blob => ({ blob, disposition }));
    })
    .then(({ blob, disposition }) => {
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      let filename = 'download';

      if (disposition && disposition.includes('filename=')) {
        filename = disposition.split('filename=')[1].replace(/"/g, '').trim();
      } else {
        filename = blob.type === 'audio/mp3' ? 'video.mp3' : 'videos.zip';
      }

      a.href = url;
      a.download = filename;
      document.body.appendChild(a);
      a.click();
      a.remove();
      window.URL.revokeObjectURL(url);
    })
    .catch(error => {
      alert('Conversion failed: ' + error.message);
    })
    .finally(() => {
      loader.style.display = 'none';
      submitBtn.disabled = false;
    });
  });
});
</script>
